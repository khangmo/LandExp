entity City {
   name String
}

entity District {
   name String
}

entity Address {
   streetAddress String,
   postalCode String,
   stateProvince String
}

enum HouseType {
   FOR_BUY, FOR_SELL, FOR_RENT, FOR_HIRE
}

enum StatusType {
   PENDING, APPROVED, CANCELED
}

enum TypeOfSell {
   PENDING, APPROVED, CANCELED
}

entity House {
   streetAddress String,
   postalCode String,
   city String,
   stateProvince String,
   statusType StatusType,
   money Integer,
   discount Integer,
   direction String,
   floorNumber String,
   acreage String,
   typeOfSell TypeOfSell,
   hits Integer,
   createAt ZonedDateTime,
   updateAt ZonedDateTime
}

entity HouseProjects {
   name String
}

enum SocialUtilityType {
   NEAR_SCHOOL, NEAR_MARKET
}

enum HouseUtilityType {
   INTERNET, PARKING, CAB_TV
}

entity SocialUtilities {
   name SocialUtilityType
}

entity HouseUtilities {
   name HouseUtilityType
}

entity Article {
   title String,
   titleAlias String,
   introtext String,
   fulltext String,
   metakey String,
   metadesc String,
   statusType StatusType,
   hiuseType HouseType,
   hits Integer,
   createAt ZonedDateTime,
   updateAt ZonedDateTime
}

entity Category {
   name String,
   nameAlias String,
   createAt ZonedDateTime,
   updateAt ZonedDateTime
}

entity UserProfiles {
   name String,
   phoneNumber String
}

entity UserSubscription {
   createAt ZonedDateTime,
   updateAt ZonedDateTime
}

entity UserContractSetting {
   createAt ZonedDateTime,
   updateAt ZonedDateTime
}

entity Banner {
   title String,
   titleAlias String,
   hits Integer,
   publicUp ZonedDateTime,
   publicDown ZonedDateTime,
   createAt ZonedDateTime,
   updateAt ZonedDateTime
}

relationship ManyToOne {
   District{city(name)} to City,
   Address{district(name)} to District,
   House{address(streetAddress)} to Address,
   House{project(name)} to HouseProjects
   Article{category(name)} to Category,
   Category{parent(name)} to Category,
   Category{createBy(login)} to User,
   Category{updateBy(login)} to User,
   Banner{createBy(login)} to User,
   Banner{updateBy(login)} to User,
   UserProfiles{user(login)} to User,
   Article{createBy(login)} to User,
   Article{updateBy(login)} to User,
   House{createBy(login)} to User,
   House{updateBy(login)} to User
}

relationship ManyToMany {
   House{houseUtility(name)} to HouseUtilities,
   House{socialUtility(name)} to SocialUtilities
}

// Set pagination options
paginate House, Address, District, City with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl
